{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { auth, createUserProfileDocument, getCurrentUser, googleProvider } from '../../firebase/firebase.util';\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess, signUpFailure, signUpSuccess } from './user.action';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error.message));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut;\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error.message));\n  }\n}\nexport function* signUp({\n  payload: {\n    displayName,\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    yield put(signUpFailure(error.message));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOut() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOut), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["/Users/anhtuannguyen/Desktop/clothes-store/src/redux/user/user.sagas.js"],"names":["all","call","put","takeLatest","UserActionTypes","auth","createUserProfileDocument","getCurrentUser","googleProvider","signInFailure","signInSuccess","signOutFailure","signOutSuccess","signUpFailure","signUpSuccess","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","message","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOut","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import {all, call, put, takeLatest} from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport {auth, createUserProfileDocument, getCurrentUser, googleProvider} from '../../firebase/firebase.util';\nimport {\n    signInFailure,\n    signInSuccess,\n    signOutFailure,\n    signOutSuccess,\n    signUpFailure,\n    signUpSuccess\n} from './user.action';\n\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}));\n    } catch (error) {\n        yield put(signInFailure(error.message));\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error.message));\n    }\n}\n\nexport function* signInWithEmail({payload: {email, password}}) {\n    try {\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    } catch (error) {\n        yield put(signInFailure(error.message));\n    }\n\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    } catch (error) {\n        yield put(signInFailure(error.message));\n\n    }\n}\n\nexport function* signOut() {\n    try {\n        yield auth.signOut;\n        yield put(signOutSuccess());\n    } catch (error) {\n        yield put(signOutFailure(error.message));\n    }\n}\n\nexport function* signUp({payload: {displayName, email, password}}) {\n    try {\n        const {user} = yield auth.createUserWithEmailAndPassword(email, password);\n        yield put(signUpSuccess({user, additionalData: {displayName}}));\n    } catch (error) {\n        yield put(signUpFailure(error.message));\n\n    }\n}\n\nexport function* signInAfterSignUp({payload: {user, additionalData}}) {\n    yield getSnapshotFromUserAuth(user, additionalData);\n\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\n\nexport function* onSignOut() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\n\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOut),\n        call(onSignUpStart),\n        call(onSignUpSuccess),\n    ]);\n}"]},"metadata":{},"sourceType":"module"}