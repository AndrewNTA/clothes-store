{"ast":null,"code":"var _jsxFileName = \"/Users/anhtuannguyen/Desktop/clothes-store/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { emailSignInStart, googleSignInStart } from '../../redux/user/user.action';\n\nconst SignInComponent = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"I already have an account.\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"Sign in with your email and password.\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    label: \"Email\",\n    value: email,\n    handleInputChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    label: \"Password\",\n    value: password,\n    handleInputChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    isGoogleSignIn: true,\n    onClick: googleSignInStart,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }\n  }, \"Sign In With Google\")))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignInComponent);","map":{"version":3,"sources":["/Users/anhtuannguyen/Desktop/clothes-store/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","emailSignInStart","googleSignInStart","SignInComponent","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport {connect} from 'react-redux';\nimport {emailSignInStart, googleSignInStart} from '../../redux/user/user.action';\n\nconst SignInComponent = ({emailSignInStart, googleSignInStart}) => {\n    const [userCredentials, setCredentials] = useState({email: '', password: ''});\n    const {email, password} = userCredentials;\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        emailSignInStart(email, password);\n\n\n    };\n    const handleChange = (event) => {\n        const {value, name} = event.target;\n        setCredentials({...userCredentials, [name]: value});\n    };\n\n\n    return (\n        <React.Fragment>\n            <div className='sign-in'>\n                <h2 className='title'>\n                    I already have an account.\n                </h2>\n                <span>Sign in with your email and password.</span>\n\n                <form onSubmit={handleSubmit}>\n                    <FormInput name='email'\n                               type='email'\n                               label='Email'\n                               value={email}\n                               handleInputChange={handleChange}\n                               required/>\n                    <FormInput name='password'\n                               type='password'\n                               label='Password'\n                               value={password}\n                               handleInputChange={handleChange}\n                               required/>\n                    <div className='buttons-group'>\n                        <CustomButton type=\"submit\">Sign In</CustomButton>\n                        <CustomButton type=\"button\" isGoogleSignIn onClick={googleSignInStart}>Sign In With\n                            Google</CustomButton>\n                    </div>\n                </form>\n            </div>\n        </React.Fragment>);\n\n};\n\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password})),\n});\n\nexport default connect(null, mapDispatchToProps)(SignInComponent);"]},"metadata":{},"sourceType":"module"}