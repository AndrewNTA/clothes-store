{"ast":null,"code":"var _jsxFileName = \"/Users/anhtuannguyen/Desktop/clothes-store/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.action';\n\nconst SignUpComponent = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('password don\\'t match');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"I do not have a account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, \"Sign up with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"SIGN UP\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUpComponent);","map":{"version":3,"sources":["/Users/anhtuannguyen/Desktop/clothes-store/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUpComponent","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport './sign-up.styles.scss';\nimport {connect} from 'react-redux';\nimport {signUpStart} from '../../redux/user/user.action';\n\nconst SignUpComponent = ({signUpStart}) => {\n\n    const [userCredentials, setCredentials] = useState({displayName: '', email: '', password: '', confirmPassword: ''});\n    const {displayName, email, password, confirmPassword} = userCredentials;\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (password !== confirmPassword) {\n            alert('password don\\'t match');\n            return;\n        }\n        signUpStart({displayName, email, password});\n\n    };\n\n    const handleChange = event => {\n        const {name, value} = event.target;\n        setCredentials({...userCredentials, [name]: value});\n    };\n\n    return (\n        <React.Fragment>\n            <div className='sign-up'>\n                <h2 className='title'>\n                    I do not have a account\n                </h2>\n                <span>\n                        Sign up with your email and password\n                    </span>\n                <form className='sign-up-form' onSubmit={handleSubmit}>\n                    <FormInput type='text'\n                               name='displayName'\n                               value={displayName}\n                               onChange={handleChange}\n                               label='Display Name'\n                               required/>\n                    <FormInput type='email'\n                               name='email'\n                               value={email}\n                               onChange={handleChange}\n                               label='Email'\n                               required/>\n                    <FormInput type='password'\n                               name='password'\n                               value={password}\n                               onChange={handleChange}\n                               label='Password'\n                               required/>\n                    <FormInput type='password'\n                               name='confirmPassword'\n                               value={confirmPassword}\n                               onChange={handleChange}\n                               label='Confirm Password'\n                               required/>\n                    <CustomButton type='submit'>SIGN UP</CustomButton>\n\n                </form>\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUpComponent);\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}