{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: 'AIzaSyCtUUs9gGK-jQRykh0_UJsvzRoIsoD0PhQ',\n  authDomain: 'ecommerce-db-1dfd3.firebaseapp.com',\n  databaseURL: 'https://ecommerce-db-1dfd3.firebaseio.com',\n  projectId: 'ecommerce-db-1dfd3',\n  storageBucket: 'ecommerce-db-1dfd3.appspot.com',\n  messagingSenderId: '612124871690',\n  appId: '1:612124871690:web:89bd3c5cdcb13cfaf1e3f3'\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return false;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (e) {\n      console.log('error creating user', e.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionSnapshotToMap = collections => {\n  const transformCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      id: doc.id,\n      routeName: encodeURI(title.toLowerCase()),\n      title,\n      items\n    };\n  });\n  return transformCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/Users/anhtuannguyen/Desktop/clothes-store/src/firebase/firebase.util.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","e","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionSnapshotToMap","collections","transformCollection","docs","map","title","items","data","id","routeName","encodeURI","toLowerCase","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: 'AIzaSyCtUUs9gGK-jQRykh0_UJsvzRoIsoD0PhQ',\n    authDomain: 'ecommerce-db-1dfd3.firebaseapp.com',\n    databaseURL: 'https://ecommerce-db-1dfd3.firebaseio.com',\n    projectId: 'ecommerce-db-1dfd3',\n    storageBucket: 'ecommerce-db-1dfd3.appspot.com',\n    messagingSenderId: '612124871690',\n    appId: '1:612124871690:web:89bd3c5cdcb13cfaf1e3f3'\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return false;\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exists) {\n        const {displayName, email} = userAuth;\n        const createAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createAt,\n                ...additionalData\n            });\n        } catch (e) {\n            console.log('error creating user', e.message);\n        }\n    }\n    return userRef;\n};\nfirebase.initializeApp(config);\n\n\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n\n    const batch = firestore.batch();\n    objectToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, obj);\n    });\n    return await batch.commit();\n};\n\nexport const convertCollectionSnapshotToMap = (collections) => {\n    const transformCollection = collections.docs.map(doc => {\n        const {title, items} = doc.data();\n\n        return {\n            id: doc.id,\n            routeName: encodeURI(title.toLowerCase()),\n            title,\n            items,\n        };\n    });\n    return transformCollection.reduce((accumulator, collection) => {\n        accumulator[collection.title.toLowerCase()] = collection;\n        return accumulator;\n    }, {});\n};\n\nexport const getCurrentUser = () => {\n    return new Promise((resolve, reject) => {\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\n            unsubscribe();\n            resolve(userAuth);\n        }, reject);\n    });\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({prompt: 'select_account'});\n\n\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;"]},"metadata":{},"sourceType":"module"}