{"ast":null,"code":"import { all, call, put, takeLatest } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { convertCollectionSnapshotToMap, firestore } from '../../firebase/firebase.util';\nimport { fetchCollectionsFailure, fetchCollectionsSuccess } from './shop.action';\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionMap = yield call(convertCollectionSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionStart)]);\n}","map":{"version":3,"sources":["/Users/anhtuannguyen/Desktop/clothes-store/src/redux/shop/shop.sagas.js"],"names":["all","call","put","takeLatest","ShopActionTypes","convertCollectionSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsSuccess","fetchCollectionAsync","collectionRef","collection","snapshot","get","collectionMap","error","message","fetchCollectionStart","FETCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAAQA,GAAR,EAAYC,IAAZ,EAAkBC,GAAlB,EAAuBC,UAAvB,QAAwC,oBAAxC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,8BAAR,EAAwCC,SAAxC,QAAwD,8BAAxD;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,eAA/D;AAGA,OAAO,UAAUC,oBAAV,GAAiC;AACpC,MAAI;AACA,UAAMC,aAAa,GAAGJ,SAAS,CAACK,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,aAAa,GAAG,MAAMb,IAAI,CAACI,8BAAD,EAAiCO,QAAjC,CAAhC;AACA,UAAMV,GAAG,CAACM,uBAAuB,CAACM,aAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMb,GAAG,CAACK,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAxB,CAAT;AACH;AAGJ;AAED,OAAO,UAAUC,oBAAV,GAAiC;AACpC,QAAMd,UAAU,CAACC,eAAe,CAACc,uBAAjB,EAA0CT,oBAA1C,CAAhB;AACH;AAGD,OAAO,UAAUU,SAAV,GAAqB;AACxB,QAAMnB,GAAG,CAAC,CACNC,IAAI,CAACgB,oBAAD,CADE,CAAD,CAAT;AAGH","sourcesContent":["import {all,call, put, takeLatest} from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport {convertCollectionSnapshotToMap, firestore} from '../../firebase/firebase.util';\nimport {fetchCollectionsFailure, fetchCollectionsSuccess} from './shop.action';\n\n\nexport function* fetchCollectionAsync() {\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionMap = yield call(convertCollectionSnapshotToMap, snapshot);\n        yield put(fetchCollectionsSuccess(collectionMap));\n    } catch (error) {\n        yield put(fetchCollectionsFailure(error.message));\n    }\n\n\n}\n\nexport function* fetchCollectionStart() {\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionAsync);\n}\n\n\nexport function* shopSagas(){\n    yield all([\n        call(fetchCollectionStart)\n    ])\n}"]},"metadata":{},"sourceType":"module"}